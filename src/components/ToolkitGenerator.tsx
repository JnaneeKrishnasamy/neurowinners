import React, { useState } from 'react'
import { Send, Loader2, Download, FileText, CheckCircle } from 'lucide-react'

interface ToolkitGeneratorProps {
  onToolkitGenerated: (toolkit: string) => void
}

const ToolkitGenerator: React.FC<ToolkitGeneratorProps> = ({ onToolkitGenerated }) => {
  const [prompt, setPrompt] = useState('')
  const [isGenerating, setIsGenerating] = useState(false)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!prompt.trim()) return

    setIsGenerating(true)
    
    // Simulate API call with realistic delay
    setTimeout(() => {
      const mockToolkit = generateMockToolkit(prompt)
      onToolkitGenerated(mockToolkit)
      setIsGenerating(false)
    }, 3000)
  }

  const handleDownload = (fileUrl: string, title: string) => {
    // Create a mock PDF content for demonstration
    const pdfContent = `%PDF-1.4
1 0 obj
<<
/Type /Catalog
/Pages 2 0 R
>>
endobj

2 0 obj
<<
/Type /Pages
/Kids [3 0 R]
/Count 1
>>
endobj

3 0 obj
<<
/Type /Page
/Parent 2 0 R
/MediaBox [0 0 612 792]
/Contents 4 0 R
/Resources <<
/Font <<
/F1 5 0 R
>>
>>
>>
endobj

4 0 obj
<<
/Length 120
>>
stream
BT
/F1 18 Tf
50 700 Td
(${title}) Tj
0 -30 Td
/F1 12 Tf
(Personalized toolkit generated for your specific needs.) Tj
0 -20 Td
(This resource includes templates, checklists, and strategies.) Tj
0 -30 Td
(Generated by NeuroToolkit) Tj
ET
endstream
endobj

5 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica
>>
endobj

xref
0 6
0000000000 65535 f 
0000000010 00000 n 
0000000053 00000 n 
0000000110 00000 n 
0000000271 00000 n 
0000000444 00000 n 
trailer
<<
/Size 6
/Root 1 0 R
>>
startxref
541
%%EOF`

    const blob = new Blob([pdfContent], { type: 'application/pdf' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `${title.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.pdf`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const analyzeWorkContext = (prompt: string) => {
    const lowerPrompt = prompt.toLowerCase()
    
    // Profession detection
    const professionKeywords = {
      veterinarian: ['vet', 'veterinarian', 'veterinary', 'animal doctor'],
      lawyer: ['lawyer', 'attorney', 'legal counsel', 'solicitor', 'barrister'],
      teacher: ['teacher', 'educator', 'instructor', 'professor'],
      nurse: ['nurse', 'nursing', 'rn', 'lpn'],
      engineer: ['engineer', 'engineering'],
      developer: ['developer', 'programmer', 'software engineer', 'coder'],
      designer: ['designer', 'design', 'ux', 'ui'],
      accountant: ['accountant', 'accounting', 'cpa', 'bookkeeper'],
      manager: ['manager', 'management', 'supervisor', 'director'],
      consultant: ['consultant', 'consulting', 'advisor']
    }

    // Work environment detection
    const environmentKeywords = {
      // Veterinary environments
      'small animal clinic': ['small animal', 'companion animal', 'pet clinic', 'small clinic'],
      'large animal practice': ['large animal', 'farm animal', 'livestock', 'equine'],
      'emergency vet clinic': ['emergency', 'er', '24 hour', 'critical care'],
      'veterinary hospital': ['hospital', 'large practice', 'multi-doctor'],
      
      // Legal environments
      'big law firm': ['big firm', 'large firm', 'corporate firm', 'biglaw', 'major firm'],
      'small law firm': ['small firm', 'boutique', 'solo practice', 'small practice'],
      'public defender': ['public defender', 'legal aid', 'pro bono'],
      'corporate legal': ['in-house', 'corporate counsel', 'company lawyer'],
      
      // Healthcare environments
      'hospital': ['hospital', 'medical center', 'health system'],
      'private practice': ['private practice', 'clinic', 'medical office'],
      'urgent care': ['urgent care', 'walk-in clinic'],
      
      // Education environments
      'elementary school': ['elementary', 'primary school', 'k-5', 'grade school'],
      'high school': ['high school', 'secondary', 'grades 9-12'],
      'university': ['university', 'college', 'higher education'],
      'special education': ['special ed', 'special needs', 'iep'],
      
      // Tech environments
      'startup': ['startup', 'start-up', 'early stage'],
      'big tech': ['big tech', 'faang', 'large company', 'tech giant'],
      'remote work': ['remote', 'work from home', 'distributed team'],
      'agency': ['agency', 'consulting firm', 'client work'],
      
      // General environments
      'open office': ['open office', 'shared workspace', 'cubicle'],
      'home office': ['home office', 'work from home', 'remote'],
      'fast-paced': ['fast-paced', 'high pressure', 'deadline driven'],
      'team-based': ['team', 'collaborative', 'group work']
    }

    // Detect profession
    let profession = 'Professional'
    for (const [prof, keywords] of Object.entries(professionKeywords)) {
      if (keywords.some(keyword => lowerPrompt.includes(keyword))) {
        profession = prof
        break
      }
    }

    // Detect work environment
    let environment = null
    for (const [env, keywords] of Object.entries(environmentKeywords)) {
      if (keywords.some(keyword => lowerPrompt.includes(keyword))) {
        environment = env
        break
      }
    }

    // Detect condition
    const conditions = ['ADHD', 'autism', 'dyslexia', 'bipolar', 'anxiety', 'depression']
    const condition = conditions.find(cond => lowerPrompt.includes(cond.toLowerCase())) || 'neurodiverse'

    // Detect specific challenges
    const challenges = []
    const challengeKeywords = {
      'time management': ['time management', 'scheduling', 'deadlines', 'procrastination'],
      'organization': ['organization', 'organizing', 'clutter', 'messy'],
      'focus': ['focus', 'concentration', 'distraction', 'attention'],
      'communication': ['communication', 'social', 'meetings', 'presentations'],
      'sensory': ['sensory', 'noise', 'lighting', 'overstimulation'],
      'memory': ['memory', 'forgetful', 'remember', 'recall']
    }

    for (const [challenge, keywords] of Object.entries(challengeKeywords)) {
      if (keywords.some(keyword => lowerPrompt.includes(keyword))) {
        challenges.push(challenge)
      }
    }

    return { profession, environment, condition, challenges }
  }

  const generateEnvironmentSpecificTips = (profession: string, environment: string, condition: string) => {
    const tips = {
      // Veterinary specific tips
      'small animal clinic': {
        'Environment Setup': 'Use color-coded appointment books and patient files. Keep frequently used supplies in designated, labeled drawers.',
        'Patient Management': 'Create visual patient status boards. Use timer apps for appointment scheduling and treatment reminders.',
        'Communication': 'Prepare scripts for common client conversations about treatment plans and costs.',
        'Stress Management': 'Take micro-breaks between appointments. Use noise-canceling headphones during paperwork time.'
      },
      'large animal practice': {
        'Equipment Organization': 'Use mobile organization systems for farm calls. Create checklists for different types of visits.',
        'Travel Planning': 'Plan routes efficiently using GPS apps. Keep emergency supplies organized in vehicle.',
        'Physical Demands': 'Use ergonomic tools and take regular stretching breaks. Plan energy-intensive tasks for peak hours.',
        'Weather Adaptation': 'Prepare sensory-friendly gear for different weather conditions.'
      },
      'emergency vet clinic': {
        'Crisis Management': 'Use triage protocols and visual priority systems. Practice stress-reduction techniques for high-pressure situations.',
        'Shift Work': 'Maintain consistent sleep schedules. Use light therapy for circadian rhythm regulation.',
        'Emotional Regulation': 'Develop coping strategies for difficult cases. Create quiet spaces for decompression.',
        'Team Communication': 'Use clear, direct communication protocols. Establish hand signals for noisy environments.'
      },

      // Legal specific tips
      'big law firm': {
        'Billable Hours': 'Use detailed time-tracking apps with automatic reminders. Break large projects into billable chunks.',
        'Client Management': 'Create templates for client communications. Use CRM systems to track interactions.',
        'Document Review': 'Use highlighting systems and digital annotation tools. Take regular eye breaks.',
        'Networking': 'Prepare conversation starters and business card organization systems.'
      },
      'small law firm': {
        'Multi-tasking': 'Use task-switching techniques and priority matrices. Batch similar activities together.',
        'Client Relations': 'Develop personal client management systems. Create follow-up reminder systems.',
        'Resource Management': 'Organize legal research efficiently. Use templates for common documents.',
        'Work-Life Balance': 'Set clear boundaries between work and personal time. Use separate spaces for different activities.'
      },
      'corporate legal': {
        'Internal Meetings': 'Prepare agenda templates and talking points. Use visual aids for complex legal concepts.',
        'Compliance Tracking': 'Create visual compliance calendars and reminder systems. Use automated tracking tools.',
        'Cross-Department Work': 'Develop communication bridges with non-legal teams. Create simplified legal explanations.',
        'Policy Development': 'Use flowcharts and visual guides for policy creation. Test policies with diverse user groups.'
      },

      // General environments
      'open office': {
        'Noise Management': 'Use noise-canceling headphones and white noise apps. Create visual "do not disturb" signals.',
        'Distraction Control': 'Position desk to minimize visual distractions. Use privacy screens and desk organizers.',
        'Social Navigation': 'Prepare small talk topics and polite interruption phrases. Schedule focused work time.',
        'Sensory Regulation': 'Keep sensory tools at desk (fidgets, stress balls). Use blue light filters on screens.'
      },
      'remote work': {
        'Home Office Setup': 'Create dedicated work zones with proper lighting. Use ergonomic furniture and equipment.',
        'Time Boundaries': 'Use visual cues to separate work and personal time. Create start/end work rituals.',
        'Communication': 'Use video call templates and meeting agendas. Practice virtual presentation skills.',
        'Isolation Management': 'Schedule regular check-ins with colleagues. Join virtual coworking sessions.'
      },
      'fast-paced': {
        'Priority Management': 'Use urgent/important matrices and daily priority lists. Practice quick decision-making techniques.',
        'Stress Response': 'Develop rapid stress-relief techniques (breathing, grounding). Create calm-down spaces.',
        'Energy Management': 'Plan high-energy tasks for peak times. Use micro-recovery techniques throughout the day.',
        'Flexibility': 'Practice adaptability exercises. Create backup plans for common scenarios.'
      }
    }

    return tips[environment] || {
      'General Organization': 'Create systems that work for your specific work environment and neurodivergent needs.',
      'Communication': 'Develop clear communication strategies appropriate for your workplace culture.',
      'Time Management': 'Use tools and techniques that align with your work demands and personal strengths.',
      'Self-Care': 'Prioritize strategies that help you thrive in your specific professional context.'
    }
  }

  const generateMockToolkit = (userPrompt: string) => {
    const analysis = analyzeWorkContext(userPrompt)
    const { profession, environment, condition, challenges } = analysis
    
    const environmentTips = environment ? generateEnvironmentSpecificTips(profession, environment, condition) : {}
    const environmentName = environment || 'workplace'
    
    return `
      <div class="space-y-6">
        <div class="border-l-4 border-blue-500 pl-4 mb-6">
          <h3 class="text-xl font-semibold text-gray-900 mb-2">Personalized Toolkit for ${profession.charAt(0).toUpperCase() + profession.slice(1)}s</h3>
          <p class="text-gray-600">Tailored for ${condition} professionals ${environment ? `in ${environment} settings` : ''}</p>
          ${challenges.length > 0 ? `<p class="text-sm text-blue-600 mt-1">Focusing on: ${challenges.join(', ')}</p>` : ''}
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-blue-100 p-1 rounded mr-2">📋</span>
              ${environment ? `${environmentName.charAt(0).toUpperCase() + environmentName.slice(1)} Workflow` : 'Daily Workflow Template'}
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              ${environment && environment.includes('clinic') ? `
                <li>• Patient appointment color-coding system</li>
                <li>• Treatment room preparation checklist</li>
                <li>• Client communication templates</li>
                <li>• End-of-day inventory review</li>
              ` : environment && environment.includes('firm') ? `
                <li>• Billable hour tracking templates</li>
                <li>• Case file organization system</li>
                <li>• Client meeting preparation guide</li>
                <li>• Document review checklist</li>
              ` : `
                <li>• Morning routine checklist</li>
                <li>• Task prioritization matrix</li>
                <li>• Break scheduling system</li>
                <li>• End-of-day review template</li>
              `}
            </ul>
            <button onclick="window.handleToolkitDownload('${environmentName} Workflow Template for ${profession}s with ${condition}')" class="mt-4 bg-blue-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-blue-700 transition-colors">
              Download Template
            </button>
          </div>
          
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-green-100 p-1 rounded mr-2">🧠</span>
              ${challenges.includes('focus') ? 'Advanced Focus Enhancement' : 'Focus Enhancement Tools'}
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              ${environment === 'open office' ? `
                <li>• Noise-canceling headphone schedule</li>
                <li>• Visual "do not disturb" signals</li>
                <li>• Desk positioning strategies</li>
                <li>• Sensory regulation toolkit</li>
              ` : environment && environment.includes('emergency') ? `
                <li>• Crisis focus techniques</li>
                <li>• Rapid priority assessment tools</li>
                <li>• Stress-response management</li>
                <li>• Team communication protocols</li>
              ` : `
                <li>• Pomodoro timer settings</li>
                <li>• Distraction blocking techniques</li>
                <li>• Sensory regulation strategies</li>
                <li>• Energy management guide</li>
              `}
            </ul>
            <button onclick="window.handleToolkitDownload('Focus Enhancement Guide for ${profession}s with ${condition} in ${environmentName}')" class="mt-4 bg-green-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-green-700 transition-colors">
              Download Guide
            </button>
          </div>
          
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-purple-100 p-1 rounded mr-2">💬</span>
              ${environment && environment.includes('firm') ? 'Legal Communication Scripts' : environment && environment.includes('clinic') ? 'Client Communication Scripts' : 'Communication Scripts'}
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              ${environment && environment.includes('big') && environment.includes('firm') ? `
                <li>• Partner meeting preparation</li>
                <li>• Client presentation frameworks</li>
                <li>• Billable hour discussions</li>
                <li>• Networking conversation starters</li>
              ` : environment && environment.includes('small') && environment.includes('clinic') ? `
                <li>• Treatment explanation scripts</li>
                <li>• Cost discussion templates</li>
                <li>• Appointment scheduling phrases</li>
                <li>• Emergency situation communication</li>
              ` : `
                <li>• Meeting preparation templates</li>
                <li>• Email response frameworks</li>
                <li>• Accommodation request scripts</li>
                <li>• Feedback conversation guides</li>
              `}
            </ul>
            <button onclick="window.handleToolkitDownload('Communication Scripts for ${profession}s with ${condition} in ${environmentName}')" class="mt-4 bg-purple-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-purple-700 transition-colors">
              Download Scripts
            </button>
          </div>
          
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-orange-100 p-1 rounded mr-2">📊</span>
              ${challenges.includes('time management') ? 'Advanced Time Tracking' : 'Progress Tracking'}
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              ${environment && environment.includes('firm') ? `
                <li>• Billable hour optimization sheets</li>
                <li>• Case progress tracking</li>
                <li>• Client satisfaction monitoring</li>
                <li>• Professional development log</li>
              ` : environment && environment.includes('clinic') ? `
                <li>• Patient outcome tracking</li>
                <li>• Treatment success metrics</li>
                <li>• Client relationship monitoring</li>
                <li>• Continuing education tracker</li>
              ` : `
                <li>• Weekly goal setting sheets</li>
                <li>• Mood and energy tracker</li>
                <li>• Accomplishment log</li>
                <li>• Challenge identification tool</li>
              `}
            </ul>
            <button onclick="window.handleToolkitDownload('Progress Tracking System for ${profession}s with ${condition} in ${environmentName}')" class="mt-4 bg-orange-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-orange-700 transition-colors">
              Download Tracker
            </button>
          </div>
        </div>
        
        ${Object.keys(environmentTips).length > 0 ? `
        <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-6 border">
          <h4 class="font-semibold text-gray-900 mb-3">💡 Specialized Tips for ${profession.charAt(0).toUpperCase() + profession.slice(1)}s in ${environmentName.charAt(0).toUpperCase() + environmentName.slice(1)} Settings</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
            ${Object.entries(environmentTips).map(([category, tip]) => `
              <div>
                <strong>${category}:</strong>
                <p>${tip}</p>
              </div>
            `).join('')}
          </div>
        </div>
        ` : `
        <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-6 border">
          <h4 class="font-semibold text-gray-900 mb-3">💡 Pro Tips for ${profession.charAt(0).toUpperCase() + profession.slice(1)}s with ${condition}</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
            <div>
              <strong>Environment Setup:</strong>
              <p>Create a dedicated workspace with minimal distractions and good lighting.</p>
            </div>
            <div>
              <strong>Time Management:</strong>
              <p>Use visual timers and break large tasks into smaller, manageable chunks.</p>
            </div>
            <div>
              <strong>Self-Advocacy:</strong>
              <p>Practice explaining your needs clearly and suggest specific accommodations.</p>
            </div>
            <div>
              <strong>Stress Management:</strong>
              <p>Develop a toolkit of quick stress-relief techniques for busy workdays.</p>
            </div>
          </div>
        </div>
        `}
      </div>
    `
  }

  // Add global download handler for generated toolkit buttons
  React.useEffect(() => {
    (window as any).handleToolkitDownload = (title: string) => {
      handleDownload('', title)
    }
    
    return () => {
      delete (window as any).handleToolkitDownload
    }
  }, [])

  return (
    <section id="generator" className="py-20 bg-white">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Generate Your Personalized Toolkit
          </h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            Describe your profession, work environment, and neurodivergent needs. Get customized resources tailored to your specific situation.
          </p>
        </div>

        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-8 shadow-lg border border-gray-200">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label htmlFor="prompt" className="block text-sm font-medium text-gray-700 mb-2">
                Tell us about your situation and needs
              </label>
              <textarea
                id="prompt"
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                placeholder="Example: I'm a veterinarian with ADHD working in a busy small animal clinic. I struggle with keeping track of multiple patients and their treatment schedules during hectic days. I need help organizing my workflow and staying focused during long procedures."
                className="w-full h-32 px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-gray-900 placeholder-gray-500"
                disabled={isGenerating}
              />
            </div>

            <div className="bg-blue-50 rounded-lg p-4">
              <h4 className="font-medium text-gray-900 mb-2">💡 For better personalization, mention:</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>• Your specific work environment (e.g., "small clinic", "big law firm", "open office")</li>
                <li>• Your neurodivergent condition (ADHD, autism, dyslexia, etc.)</li>
                <li>• Specific challenges you face (time management, focus, communication)</li>
                <li>• Your role and daily responsibilities</li>
              </ul>
            </div>

            <div className="flex flex-col sm:flex-row gap-4">
              <button
                type="submit"
                disabled={!prompt.trim() || isGenerating}
                className="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-xl font-semibold text-lg hover:shadow-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
              >
                {isGenerating ? (
                  <>
                    <Loader2 className="h-5 w-5 animate-spin" />
                    <span>Analyzing & Generating...</span>
                  </>
                ) : (
                  <>
                    <Send className="h-5 w-5" />
                    <span>Generate Personalized Toolkit</span>
                  </>
                )}
              </button>
            </div>
          </form>

          <div className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="flex items-center space-x-3 text-sm text-gray-600">
              <CheckCircle className="h-5 w-5 text-green-500" />
              <span>Smart keyword detection</span>
            </div>
            <div className="flex items-center space-x-3 text-sm text-gray-600">
              <FileText className="h-5 w-5 text-blue-500" />
              <span>Environment-specific advice</span>
            </div>
            <div className="flex items-center space-x-3 text-sm text-gray-600">
              <Download className="h-5 w-5 text-purple-500" />
              <span>Tailored resources</span>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

export default ToolkitGenerator
