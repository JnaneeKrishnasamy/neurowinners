import React, { useState } from 'react'
import { Send, Loader2, Download, FileText, CheckCircle } from 'lucide-react'

interface ToolkitGeneratorProps {
  onToolkitGenerated: (toolkit: string) => void
}

const ToolkitGenerator: React.FC<ToolkitGeneratorProps> = ({ onToolkitGenerated }) => {
  const [prompt, setPrompt] = useState('')
  const [isGenerating, setIsGenerating] = useState(false)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!prompt.trim()) return

    setIsGenerating(true)
    
    // Simulate API call with realistic delay
    setTimeout(() => {
      const mockToolkit = generateMockToolkit(prompt)
      onToolkitGenerated(mockToolkit)
      setIsGenerating(false)
    }, 3000)
  }

  const handleDownload = (fileUrl: string, title: string) => {
    // Create a mock PDF content for demonstration
    const pdfContent = `%PDF-1.4
1 0 obj
<<
/Type /Catalog
/Pages 2 0 R
>>
endobj

2 0 obj
<<
/Type /Pages
/Kids [3 0 R]
/Count 1
>>
endobj

3 0 obj
<<
/Type /Page
/Parent 2 0 R
/MediaBox [0 0 612 792]
/Contents 4 0 R
/Resources <<
/Font <<
/F1 5 0 R
>>
>>
>>
endobj

4 0 obj
<<
/Length 120
>>
stream
BT
/F1 18 Tf
50 700 Td
(${title}) Tj
0 -30 Td
/F1 12 Tf
(Personalized toolkit generated for your specific needs.) Tj
0 -20 Td
(This resource includes templates, checklists, and strategies.) Tj
0 -30 Td
(Generated by NeuroToolkit) Tj
ET
endstream
endobj

5 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica
>>
endobj

xref
0 6
0000000000 65535 f 
0000000010 00000 n 
0000000053 00000 n 
0000000110 00000 n 
0000000271 00000 n 
0000000444 00000 n 
trailer
<<
/Size 6
/Root 1 0 R
>>
startxref
541
%%EOF`

    const blob = new Blob([pdfContent], { type: 'application/pdf' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `${title.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.pdf`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const generateMockToolkit = (userPrompt: string) => {
    const profession = extractProfession(userPrompt)
    const condition = extractCondition(userPrompt)
    
    return `
      <div class="space-y-6">
        <div class="border-l-4 border-blue-500 pl-4 mb-6">
          <h3 class="text-xl font-semibold text-gray-900 mb-2">Personalized Toolkit for ${profession}</h3>
          <p class="text-gray-600">Tailored for ${condition} professionals</p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-blue-100 p-1 rounded mr-2">ðŸ“‹</span>
              Daily Workflow Template
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              <li>â€¢ Morning routine checklist</li>
              <li>â€¢ Task prioritization matrix</li>
              <li>â€¢ Break scheduling system</li>
              <li>â€¢ End-of-day review template</li>
            </ul>
            <button onclick="window.handleToolkitDownload('Daily Workflow Template for ${profession}s with ${condition}')" class="mt-4 bg-blue-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-blue-700 transition-colors">
              Download Template
            </button>
          </div>
          
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-green-100 p-1 rounded mr-2">ðŸ§ </span>
              Focus Enhancement Tools
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              <li>â€¢ Pomodoro timer settings</li>
              <li>â€¢ Distraction blocking techniques</li>
              <li>â€¢ Sensory regulation strategies</li>
              <li>â€¢ Energy management guide</li>
            </ul>
            <button onclick="window.handleToolkitDownload('Focus Enhancement Guide for ${profession}s with ${condition}')" class="mt-4 bg-green-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-green-700 transition-colors">
              Download Guide
            </button>
          </div>
          
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-purple-100 p-1 rounded mr-2">ðŸ’¬</span>
              Communication Scripts
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              <li>â€¢ Meeting preparation templates</li>
              <li>â€¢ Email response frameworks</li>
              <li>â€¢ Accommodation request scripts</li>
              <li>â€¢ Feedback conversation guides</li>
            </ul>
            <button onclick="window.handleToolkitDownload('Communication Scripts for ${profession}s with ${condition}')" class="mt-4 bg-purple-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-purple-700 transition-colors">
              Download Scripts
            </button>
          </div>
          
          <div class="bg-white rounded-lg p-6 shadow-sm border">
            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
              <span class="bg-orange-100 p-1 rounded mr-2">ðŸ“Š</span>
              Progress Tracking
            </h4>
            <ul class="space-y-2 text-sm text-gray-600">
              <li>â€¢ Weekly goal setting sheets</li>
              <li>â€¢ Mood and energy tracker</li>
              <li>â€¢ Accomplishment log</li>
              <li>â€¢ Challenge identification tool</li>
            </ul>
            <button onclick="window.handleToolkitDownload('Progress Tracking System for ${profession}s with ${condition}')" class="mt-4 bg-orange-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-orange-700 transition-colors">
              Download Tracker
            </button>
          </div>
        </div>
        
        <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-6 border">
          <h4 class="font-semibold text-gray-900 mb-3">ðŸ’¡ Pro Tips for ${profession}s with ${condition}</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
            <div>
              <strong>Environment Setup:</strong>
              <p>Create a dedicated workspace with minimal distractions and good lighting.</p>
            </div>
            <div>
              <strong>Time Management:</strong>
              <p>Use visual timers and break large tasks into smaller, manageable chunks.</p>
            </div>
            <div>
              <strong>Self-Advocacy:</strong>
              <p>Practice explaining your needs clearly and suggest specific accommodations.</p>
            </div>
            <div>
              <strong>Stress Management:</strong>
              <p>Develop a toolkit of quick stress-relief techniques for busy workdays.</p>
            </div>
          </div>
        </div>
      </div>
    `
  }

  const extractProfession = (prompt: string): string => {
    const professions = ['veterinarian', 'teacher', 'engineer', 'designer', 'developer', 'nurse', 'accountant', 'lawyer', 'manager', 'consultant']
    const found = professions.find(prof => prompt.toLowerCase().includes(prof))
    return found || 'Professional'
  }

  const extractCondition = (prompt: string): string => {
    const conditions = ['ADHD', 'autism', 'dyslexia', 'bipolar']
    const found = conditions.find(cond => prompt.toLowerCase().includes(cond.toLowerCase()))
    return found || 'neurodiverse'
  }

  // Add global download handler for generated toolkit buttons
  React.useEffect(() => {
    (window as any).handleToolkitDownload = (title: string) => {
      handleDownload('', title)
    }
    
    return () => {
      delete (window as any).handleToolkitDownload
    }
  }, [])

  return (
    <section id="generator" className="py-20 bg-white">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Generate Your Personalized Toolkit
          </h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            Describe your profession, challenges, and neurodivergent needs. Get customized resources in seconds.
          </p>
        </div>

        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-8 shadow-lg border border-gray-200">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label htmlFor="prompt" className="block text-sm font-medium text-gray-700 mb-2">
                Tell us about your situation and needs
              </label>
              <textarea
                id="prompt"
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                placeholder="Example: I'm a veterinarian with ADHD who struggles with keeping track of multiple patients and their treatment schedules. I need help organizing my daily workflow and staying focused during long procedures."
                className="w-full h-32 px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-gray-900 placeholder-gray-500"
                disabled={isGenerating}
              />
            </div>

            <div className="flex flex-col sm:flex-row gap-4">
              <button
                type="submit"
                disabled={!prompt.trim() || isGenerating}
                className="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-xl font-semibold text-lg hover:shadow-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
              >
                {isGenerating ? (
                  <>
                    <Loader2 className="h-5 w-5 animate-spin" />
                    <span>Generating Your Toolkit...</span>
                  </>
                ) : (
                  <>
                    <Send className="h-5 w-5" />
                    <span>Generate Toolkit</span>
                  </>
                )}
              </button>
            </div>
          </form>

          <div className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="flex items-center space-x-3 text-sm text-gray-600">
              <CheckCircle className="h-5 w-5 text-green-500" />
              <span>Instant generation</span>
            </div>
            <div className="flex items-center space-x-3 text-sm text-gray-600">
              <FileText className="h-5 w-5 text-blue-500" />
              <span>Downloadable resources</span>
            </div>
            <div className="flex items-center space-x-3 text-sm text-gray-600">
              <Download className="h-5 w-5 text-purple-500" />
              <span>Ready-to-use templates</span>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

export default ToolkitGenerator
